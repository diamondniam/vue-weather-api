{"ast":null,"code":"export default {\n  props: [],\n  methods: {\n    async getData() {\n      this.$refs.inputDOM.placeholder = this.placeholder;\n      let cityName = this.city.replace(' ', '+');\n      let response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${this.api}`);\n      if (response.ok) {\n        let data = await response.json();\n        this.catched = true;\n        let city = {};\n        city = {\n          weather: data.weather[0].main,\n          temp: data.main.temp,\n          feelsLike: data.main.feels_like,\n          pressure: data.main.pressure,\n          tempMax: data.main.temp_max,\n          tempMin: data.main.temp_min\n        };\n        this.data = city;\n      } else if (this.city != '') {\n        this.city = '';\n        this.$refs.inputDOM.placeholder = this.placeholderError;\n      }\n    },\n    requestTimeout() {\n      this.timeoutRequest = setTimeout(() => {\n        this.getData();\n      }, this.requestDelay);\n    },\n    stopTimeout() {\n      clearTimeout(this.timeoutRequest);\n    }\n  }\n};","map":{"version":3,"names":["props","methods","getData","$refs","inputDOM","placeholder","cityName","city","replace","response","fetch","api","ok","data","json","catched","weather","main","temp","feelsLike","feels_like","pressure","tempMax","temp_max","tempMin","temp_min","placeholderError","requestTimeout","timeoutRequest","setTimeout","requestDelay","stopTimeout","clearTimeout"],"sources":["/Users/Diamond/My Folder/Development/Projects/100424-vue-weather/src/components/inputComp.vue"],"sourcesContent":["<template>\n  <div class=\"input\">\n    <h5>weather in</h5> <p>:</p>\n    <input type=\"text\" ref=\"inputDOM\" @input=\"catched = false; stopTimeout(); requestTimeout()\" v-model=\"city\" placeholder=\"Enter city\">\n  </div>\n</template>\n\n<script>\nexport default {\n  props: [ ],\n  methods: {\n    async getData() {\n      this.$refs.inputDOM.placeholder =  this.placeholder\n\n      let cityName = this.city.replace(' ', '+')\n\n      let response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${this.api}`)\n\n      if (response.ok) {\n        let data = await response.json()\n        this.catched = true\n\n        let city = {}\n\n        city = { \n          weather: data.weather[0].main,\n          temp: data.main.temp,\n          feelsLike: data.main.feels_like,\n          pressure: data.main.pressure,\n          tempMax: data.main.temp_max,\n          tempMin: data.main.temp_min \n        }\n\n        this.data = city\n      } else if (this.city != '') {\n        this.city = ''\n        this.$refs.inputDOM.placeholder = this.placeholderError\n      }\n    },\n    requestTimeout() {\n      this.timeoutRequest = setTimeout(() => {\n        this.getData()\n      }, this.requestDelay)\n    },\n    stopTimeout() {\n      clearTimeout(this.timeoutRequest)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n$input-text-color:rgb(38, 28, 30);\n\n.input {\n  margin-top: 20px;\n  display: flex;\n  text-align: end;\n  align-items: center;\n  gap: 5px;\n  line-height: 15px;\n  font-weight: 500;\n  color: $input-text-color;\n\n  input {\n    width: 300px;\n    background: transparent;\n    outline: 0;\n    border: 0;\n    text-transform: uppercase;\n    font-size: 40px;\n    font-weight: 700;\n    font-family: 'Times New Roman', Times, serif;\n    color: $input-text-color;\n    text-decoration: underline;\n    text-align: end;\n  }\n  \n  input::placeholder {\n    font-weight: 400;\n    opacity: 1;\n    color: rgb(85, 64, 68);\n    text-decoration: underline;\n  }\n\n  h5 {\n    font-size: 25px;\n    font-weight: 500;\n    color: $input-text-color;\n  }\n\n  p {\n    font-size: 35px;\n  }\n}\n</style>"],"mappings":"AAQA,eAAe;EACbA,KAAK,EAAE,EAAG;EACVC,OAAO,EAAE;IACP,MAAMC,OAAOA,CAAA,EAAG;MACd,IAAI,CAACC,KAAK,CAACC,QAAQ,CAACC,WAAU,GAAK,IAAI,CAACA,WAAU;MAElD,IAAIC,QAAO,GAAI,IAAI,CAACC,IAAI,CAACC,OAAO,CAAC,GAAG,EAAE,GAAG;MAEzC,IAAIC,QAAO,GAAI,MAAMC,KAAK,CAAE,qDAAoDJ,QAAS,UAAS,IAAI,CAACK,GAAI,EAAC;MAE5G,IAAIF,QAAQ,CAACG,EAAE,EAAE;QACf,IAAIC,IAAG,GAAI,MAAMJ,QAAQ,CAACK,IAAI,CAAC;QAC/B,IAAI,CAACC,OAAM,GAAI,IAAG;QAElB,IAAIR,IAAG,GAAI,CAAC;QAEZA,IAAG,GAAI;UACLS,OAAO,EAAEH,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;UAC7BC,IAAI,EAAEL,IAAI,CAACI,IAAI,CAACC,IAAI;UACpBC,SAAS,EAAEN,IAAI,CAACI,IAAI,CAACG,UAAU;UAC/BC,QAAQ,EAAER,IAAI,CAACI,IAAI,CAACI,QAAQ;UAC5BC,OAAO,EAAET,IAAI,CAACI,IAAI,CAACM,QAAQ;UAC3BC,OAAO,EAAEX,IAAI,CAACI,IAAI,CAACQ;QACrB;QAEA,IAAI,CAACZ,IAAG,GAAIN,IAAG;MACjB,OAAO,IAAI,IAAI,CAACA,IAAG,IAAK,EAAE,EAAE;QAC1B,IAAI,CAACA,IAAG,GAAI,EAAC;QACb,IAAI,CAACJ,KAAK,CAACC,QAAQ,CAACC,WAAU,GAAI,IAAI,CAACqB,gBAAe;MACxD;IACF,CAAC;IACDC,cAAcA,CAAA,EAAG;MACf,IAAI,CAACC,cAAa,GAAIC,UAAU,CAAC,MAAM;QACrC,IAAI,CAAC3B,OAAO,CAAC;MACf,CAAC,EAAE,IAAI,CAAC4B,YAAY;IACtB,CAAC;IACDC,WAAWA,CAAA,EAAG;MACZC,YAAY,CAAC,IAAI,CAACJ,cAAc;IAClC;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}