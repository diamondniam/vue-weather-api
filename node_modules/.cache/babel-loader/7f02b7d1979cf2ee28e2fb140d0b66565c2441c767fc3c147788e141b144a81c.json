{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"title\"\n}, \"we seek for...\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_inputComp = _resolveComponent(\"inputComp\");\n  const _component_DataComp = _resolveComponent(\"DataComp\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createVNode(_component_inputComp), _createVNode(_component_DataComp, {\n    data: $data.data,\n    catched: $data.catched\n  }, null, 8 /* PROPS */, [\"data\", \"catched\"])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_inputComp","_component_DataComp","data","$data","catched"],"sources":["/Users/Diamond/My Folder/Development/Projects/100424-vue-weather/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1 class=\"title\">we seek for...</h1>\n    <inputComp />\n    <DataComp :data=\"data\" :catched=\"catched\"/>\n  </div>\n</template>\n\n<script>\nimport DataComp from './components/DataComp.vue';\nimport InputComp from './components/inputComp.vue';\n\nexport default {\n  components: { DataComp, InputComp },\n  data() {\n    return {\n      city: '',\n      api: '248a090b940a977dc5d798a5dedb301e',\n      weather: '',\n      data: {},\n      catched: false,\n\n      placeholder: 'enter city',\n      placeholderError: 'not correct',\n\n      timeoutRequest: null,\n      requestDelay: 1500\n    }\n  },\n  methods: {\n    async getData() {\n      this.$refs.inputDOM.placeholder =  this.placeholder\n\n      let cityName = this.city.replace(' ', '+')\n\n      let response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${this.api}`)\n\n      if (response.ok) {\n        let data = await response.json()\n        this.catched = true\n\n        let city = {}\n\n        city = { \n          weather: data.weather[0].main,\n          temp: data.main.temp,\n          feelsLike: data.main.feels_like,\n          pressure: data.main.pressure,\n          tempMax: data.main.temp_max,\n          tempMin: data.main.temp_min \n        }\n\n        this.data = city\n      } else if (this.city != '') {\n        this.city = ''\n        this.$refs.inputDOM.placeholder = this.placeholderError\n      }\n    },\n    requestTimeout() {\n      this.timeoutRequest = setTimeout(() => {\n        this.getData()\n      }, this.requestDelay)\n    },\n    stopTimeout() {\n      clearTimeout(this.timeoutRequest)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n$input-text-color:rgb(38, 28, 30);\n\n.title {\n  text-transform: uppercase;\n  font-size: 50px;\n}\n\n.input {\n  margin-top: 20px;\n  display: flex;\n  text-align: end;\n  align-items: center;\n  gap: 5px;\n  line-height: 15px;\n  font-weight: 500;\n  color: $input-text-color;\n\n  input {\n    width: 300px;\n    background: transparent;\n    outline: 0;\n    border: 0;\n    text-transform: uppercase;\n    font-size: 40px;\n    font-weight: 700;\n    font-family: 'Times New Roman', Times, serif;\n    color: $input-text-color;\n    text-decoration: underline;\n    text-align: end;\n  }\n  \n  input::placeholder {\n    font-weight: 400;\n    opacity: 1;\n    color: rgb(85, 64, 68);\n    text-decoration: underline;\n  }\n\n  h5 {\n    font-size: 25px;\n    font-weight: 500;\n    color: $input-text-color;\n  }\n\n  p {\n    font-size: 35px;\n  }\n\n  button {\n    background: transparent;\n    border: 1px solid black;\n    outline: 0;\n    padding: 20px;\n    cursor: pointer;\n\n    &:hover {\n      transform: scale(1.05);\n    }\n  }\n}\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAW;gCACpBC,mBAAA,CAAqC;EAAjCD,KAAK,EAAC;AAAO,GAAC,gBAAc;;;;uBADlCE,mBAAA,CAIM,OAJNC,UAIM,GAHJC,UAAqC,EACrCC,YAAA,CAAaC,oBAAA,GACbD,YAAA,CAA2CE,mBAAA;IAAhCC,IAAI,EAAEC,KAAA,CAAAD,IAAI;IAAGE,OAAO,EAAED,KAAA,CAAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}